<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYLd0ALl3/AEs9
        7glKPO4ZSTzuK0c77UBGOexRRjjsZUQ37HVDNeyDQjTrkUEz65lAMeuePzHqoz4v6qI9LumdPCzpmDos
        6JE5KuiDOCnodTco52Q2JudRNSXmPzQk5iozI+UYMiLmCDIh5QAAAAAAAAAAAAAAAAAAAAAATEDuAE1B
        7QdMQO9YSz/vtEs+7thKPe7oSTvt8kc67ftGOe3/RTjs/0Q27P9DNez/QjTr/0Ez6/9AMer/PzDq/z0v
        6v88Lun/Oyzp/zor6P85Kuj/OCno/zcn5/s2JufyNCXn6DMk5tczI+awMiLmTzIg5QQyIOUAAAAAAExC
        7ABMOf8ATUHvaE1B7/NMQO//Sz/v/0s+7v9KPe7/STvt/0c67f9GOe3/RTjs/0Q27P9DNez/QjTr/0Ez
        6/9AMer/PzDq/z0v6v88Lun/Oyzp/zor6P85Kuj/OCno/zcn5/82Juf/NCXn/zMk5v8yI+buMiLmWjIk
        5AAzHucAT0PvAE9D7xlPQ/DRTkLw/01B7/9MQO//Sz/v/0s+7v9KPe7/STvt/0c67f9GOe3/RTjs/0Q2
        7P9DNez/QjTr/0Ez6/9AMer/PzDq/z0v6v88Lun/Oyzp/zor6P85Kuj/OCno/zcn5/82Juf/NCXn/zMk
        5v8yI+bFMiLlETIi5QBQRPAAUETwO1BD8PBPQ/D/TkLw/01B7/9MQO//Sz/v/0s+7v9KPe7/STvt/0c6
        7f9FOOr/QzXo/0I16/9DNez/QjTr/0Ez6/9AMer/PzDq/z0v6v88Lun/Oyzp/zor6P85Kuj/OCno/zcn
        5/82Juf/NCXn/zMk5uozI+YuMyPmAFFF8QBRRfFWUUTw/FBD8P9PQ/D/TkLw/01B7/9MQO//Sz/v/0s+
        7v9KPe7/Rzns/2Va5v+hmu3/X1Tm/0E06f9CNez/QjTr/0Ez6/9AMer/PzDq/z0v6v88Lun/Oyzp/zor
        6P85Kuj/OCno/zcn5/82Juf/NCXn9zMk5kgzJOYAUkbxAFJG8W9RRfH/UUTw/1BD8P9PQ/D/TkLw/01B
        7/9MQO//Sz/v/0s+7v9GOez/hn3p//7////g3vj/h37p/0g75v9BM+v/QjTr/0Ez6/9AMer/PzDq/z0v
        6v88Lun/Oyzp/zor6P85Kuj/OCno/zcn5/82Juf/NCXnYDUl5wBTR/EAU0fxg1JG8f9RRfH/UUTw/1BD
        8P9PQ/D/TkLw/01B7/9MQO//Sz/v/0c67P+Hfur////////////49/3/t7Lw/15T5f9AMuj/QTPr/0Ez
        6/9AMer/PzDq/z0v6v88Lun/Oyzp/zor6P85Kuj/OCno/zcn5/82Jud1NijnAFRI8gBUSPKTU0fx/1JG
        8f9RRfH/UUTw/1BD8P9PQ/D/TkLw/01B7/9MQO//Rzvt/4d/6v//////////////////////4N34/4Z+
        6f9HOub/QDLq/0Ez6/9AMer/PzDq/z0v6v88Lun/Oyzp/zor6P85Kuj/OCno/zcn54g5K+oAWkn7AFRJ
        8pxUSPL/U0fx/1JG8f9RRfH/UUTw/1BD8P9PQ/D/TkLw/01B7/9IPO3/h4Dq////////////////////
        ////////9/f9/7ax8P9dUuX/QDPo/0Ez6/9AMer/PzDq/z0v6v88Lun/Oyzp/zor6P85Kuj/OCnolTov
        6ABoSvIAVUryolVJ8v9USPL/U0fx/1JG8f9RRfH/UUTw/1BD8P9PQ/D/TkLw/0k97f+IgOr/////////
        /////////////////////////////+De+P9tY+b/QDLp/0Ez6/9AMer/PzDq/z0v6v88Lun/Oyzp/zor
        6P85KuifTD3oAFZL/wBWS/OiVkry/1VJ8v9USPL/U0fx/1JG8f9RRfH/UUTw/1BD8P9PQ/D/Sj7u/4iB
        6v//////////////////////////////////////4N/4/25k5v9BM+r/QjTr/0Ez6/9AMer/PzDq/z0v
        6v88Lun/Oyzp/zos6aFXQP0AV0zzAFdM85xXS/P/Vkry/1VJ8v9USPL/U0fx/1JG8f9RRfH/UUTw/1BD
        8P9LP+7/iYLr////////////////////////////+Pf9/7iz8f9gVeb/RDbp/0Q27P9DNez/QjTr/0Ez
        6/9AMer/PzDq/z0v6v88Lun/PC3pmkIz7wBYTfMAWE3zk1hM8/9XS/P/Vkry/1VJ8v9USPL/U0fx/1JG
        8f9RRfH/UUTw/0w/7v+Jguv//////////////////////+Hf+P+Kgur/TUDn/0Y47P9GOe3/RTjs/0Q2
        7P9DNez/QjTr/0Ez6/9AMer/PzDq/z0v6v89LumPPzLtAFlO9ABZTvSDWE3z/1hM8/9XS/P/Vkry/1VJ
        8v9USPL/U0fx/1JG8f9RRfH/TUDu/4qD6/////////////j3/f+5tfH/ZFro/0g76/9JPO7/STvt/0c6
        7f9GOe3/RTjs/0Q27P9DNez/QjTr/0Ez6/9AMer/PzDq/z4v6nw/MOsAWk/0AFpP9G9ZTvT/WE3z/1hM
        8/9XS/P/Vkry/1VJ8v9USPL/U0fx/1JG8f9NQe//ioPr///+///h3/n/jIXr/1FF6f9LPu7/Sz/v/0s+
        7v9KPe7/STvt/0c67f9GOe3/RTjs/0Q27P9DNez/QjTr/0Ez6/9AMer/PzHqZT8x6gBaT/QAWk/0VlpP
        9P1ZTvT/WE3z/1hM8/9XS/P/Vkry/1VJ8v9USPL/U0fx/1BE8P9sY+n/pqDu/2hd6f9MQO3/TkHw/01B
        7/9MQO//Sz/v/0s+7v9KPe7/STvt/0c67f9GOe3/RTjs/0Q27P9DNez/QjTr/0Ez6/g/MepKPzHqAFpP
        9ABZT/M7Wk/08FpP9P9ZTvT/WE3z/1hM8/9XS/P/Vkry/1VJ8v9USPL/U0fx/1FF7v9OQ+z/T0Pv/1BD
        8P9PQ/D/TkLw/01B7/9MQO//Sz/v/0s+7v9KPe7/STvt/0c67f9GOe3/RTjs/0Q27P9DNez/QjTr6kE0
        6y9BNOsAWk70AFpO9BlaT/TRWk/0/1pP9P9ZTvT/WE3z/1hM8/9XS/P/Vkry/1VJ8v9USPL/U0fx/1JG
        8f9RRfH/UUTw/1BD8P9PQ/D/TkLw/01B7/9MQO//Sz/v/0s+7v9KPe7/STvt/0c67f9GOe3/RTjs/0Q2
        7P9DNezFQjTrEUI06wBaTPUAT2rqAFpO82haT/TzWk/0/1pP9P9ZTvT/WE3z/1hM8/9XS/P/Vkry/1VJ
        8v9USPL/U0fx/1JG8f9RRfH/UUTw/1BD8P9PQ/D/TkLw/01B7/9MQO//Sz/v/0s+7v9KPe7/STvt/0c6
        7f9GOe3/RTjs7kQ27FpFOOwARDbtAAAAAABaT/MAWk/zB1pP9FlaT/S1Wk/02VpP9OlZTvTzWE3z+1hM
        8/9XS/P/Vkry/1VJ8v9USPL/U0fx/1JG8f9RRfH/UUTw/1BD8P9PQ/D/TkLw/01B7/9MQO//Sz/v+0s+
        7vJKPe7oSTvt10c67bFGOOxQRTbqBEU36wAAAAAAAAAAAAAAAABYQ/8AYXnPAFpO9AlaT/MZWk/0LFlO
        80FYTfNTWE3zZldM83ZWS/OEVkryklRJ8plUSPKeU0fxo1JG8aJRRfGeUETwmU9D8JFOQvCDTkHvdU1A
        72RMP+9RSz7uP0o97ipJPO4YRzvtCEk77gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////wAAAPwAAAA8AAAAOAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABwAAAA8AA
        AAPwAAAP//////////////////////////8=
</value>
  </data>
</root>